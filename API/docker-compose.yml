services:
  ui:
    container_name: ui
    restart: unless-stopped
    build:
      args:
        - ASSEMBLY_NAME=ASSISTENTE.UI
        - PROJECT_PATH=ASSISTENTE.UI
      context: .
      dockerfile: Docker/Blazor/Dockerfile
    ports:
      - 1008:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      # TODO: Mount appsettings.json

  api:
    container_name: api
    hostname: assistente-api
    restart: unless-stopped
    build:
      args:
        - ASSEMBLY_NAME=ASSISTENTE.API
        - PROJECT_PATH=ASSISTENTE.API
      context: .
      dockerfile: Docker/API/Dockerfile
    ports:
      - 1009:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - ConnectionStrings__AssistenteDatabase=${ConnectionStrings_AssistenteDatabase}
      - OpenAI__ApiKey=${OpenAI_ApiKey}
      - Qdrant__Host=${Qdrant_Host}
      - Rabbit__Name=${Rabbit_Name}
      - Rabbit__Url=${Rabbit_Url}
      - InternalApi__Url=${InternalApi_Url}

  worker-sync:
    container_name: worker-sync
    hostname: assistente-worker-sync
    restart: unless-stopped
    build:
      args:
        - ASSEMBLY_NAME=ASSISTENTE.Worker.Sync
        - PROJECT_PATH=ASSISTENTE.Worker.Sync
      context: .
      dockerfile: Docker/API/Dockerfile
    ports:
      - 1010:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - ConnectionStrings__AssistenteDatabase=${ConnectionStrings_AssistenteDatabase}
      - OpenAI__ApiKey=${OpenAI_ApiKey}
      - Qdrant__Host=${Qdrant_Host}
      - Rabbit__Name=${Rabbit_Name}
      - Rabbit__Url=${Rabbit_Url}
      - InternalApi__Url=${InternalApi_Url}